<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.lms.mapper.AttendanceMapper">
	<!-- 강사가 담당하는 출석부 가져오기 -->
	<select id="selectAttendanceListByTeacher" parameterType="Map" resultType="Map">
	SELECT 
		w.account_id teacherId
		, w.teacher_name teacherName
		, w.lecture_name lectureName
		, w.education_no educationNo
		, w.studentId studentId
		, s.student_name studentName
	FROM student s
	INNER JOIN(
		SELECT e.education_no, e.account_id studentId, z.*
		FROM education e
		INNER JOIN(
			SELECT l.lecture_name, t.account_id, t.teacher_name
			FROM lecture l
			INNER JOIN (
				SELECT account_id, teacher_name
				FROM teacher
				WHERE account_id =#{accountId})t
			ON l.teacher_name=t.teacher_name
			WHERE l.lecture_name = #{lectureName}
		)z
		ON e.lecture_name = z.lecture_name
	)w
	ON s.account_id =w.studentId
	ORDER BY binary(s.student_name) ASC
	</select>

	<!-- 강사가 담당하는 출석부 가져오기 -->
	<select id="selectAttendanceListByManager" parameterType="String" resultType="Map">
	SELECT 
		w.education_no educationNo
		, s.student_name studentName
		, w.lecture_name lectureName
		, w.studentId studentId
		, w.teacher_name teacherName
	FROM student s
	INNER JOIN (
			SELECT e.education_no, e.lecture_name, e.account_id studentId, z.teacher_name
			FROM education e
			INNER JOIN(
				SELECT l.lecture_name, l.teacher_name
				FROM lecture l
				WHERE lecture_name=#{lectureName}
			)z
			ON e.lecture_name = z.lecture_name 
		)w
	ON s.account_id = w.studentId
	ORDER BY w.education_no ASC
	</select>
</mapper>