<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.lms.mapper.ReportMapper">

	<!-- 제출기한을 넘기지 않은 출제된 과제 중 과제 제출 하지 않은 과제에 대한 정보를 추출하는 메소드 -->
	<select id="selectReportListStateInfo" resultType="Map" parameterType="String">
		SELECT
			z.account_id accountId
			, z.education_no educationNo
			, z.lecture_name lectureName
			, r.report_no reportNo
			, r.subject_name subjectName
			, r.report_title reportTitle
			, r.report_content reportContent
			, r.report_start_date reportStartDate
			, r.report_end_date reportEndDate
			, (SELECT COUNT(*) FROM report_submit 
		WHERE education_no= z.education_no AND report_no = r.report_no) state
		FROM report r
		INNER JOIN (
		SELECT t.account_id, t.lecture_name, t.education_no, ls.subject_name
		FROM lecture_subject ls
		INNER JOIN (
		SELECT e.account_id, e.education_no, l.lecture_name
		FROM education e
		INNER JOIN lecture l
		USING(lecture_name)
		WHERE e.account_id= #{accountId} AND e.education_state='수강중' )t
		USING(lecture_name) )z
		USING(subject_name)
		WHERE
			 <![CDATA[ r.report_start_date <= CURDATE() AND CURDATE() <= r.report_end_date ]]>
		ORDER BY r.report_end_date DESC
	</select>
	<!-- 제출기한을 넘기지 않은 출제된 과제 중 과제 제출 하지 않은 과제에 대한 정보를 추출하는 메소드 -->
	
	<!-- 강좌별 과제 리스트 조회하기 -->
	<select id="selectReportList" resultType="com.gd.lms.vo.Report">
		SELECT
		report_no reportNo,
		subject_name subjectName,
		report_title reportTitle,
		report_content reportContent,
		report_start_date reportStartDate,
		report_end_date reportEndDate,
		update_date updateDate,
		create_date createDate
		FROM report
		ORDER BY report_no DESC
	</select>
	<!-- 전체 과제 리스트 조회하기 -->

	<!-- reportNo와 관련된 subjectName 가져오기 -->
	<select id="selectLectureSubject" resultType="List" parameterType="int">
		SELECT report_no reportNo
		, subject_name subjectName
		, report_title reportTitle
		, report_content reportContent
		, report_start_date reportStartDate
		, report_end_date reportEndDate
		, update_date updateDate
		, create_date createDate
		FROM report
		WHERE report_no =
		(SELECT report_no FROM
		report_submit WHERE report_submit_no= #{reportNo});
	</select>
	<!-- lectureSubject의 subjectName 가져오기 -->

	<!-- 과제 출제하기 -->
	<insert id="insertReport" parameterType="com.gd.lms.vo.Report">
		INSERT INTO
		report(
		subject_name, report_title, report_content, report_start_date,
		report_end_date, update_date, create_date)
		VALUES (#{subjectName},
		#{reportTitle}, #{reportContent},
		#{reportStartDate},#{reportEndDate},now(),now())
	</insert>
	<!-- 과제 출제하기 -->

	<!-- 출제한 과제 수정하기 form -->
	<select id="selectReportOne" resultType="com.gd.lms.vo.Report"
		parameterType="int">
		SELECT report_no reportNo, subject_name subjectName,
		report_title reportTitle,
		report_content reportContent,
		report_start_date reportStartDate, report_end_date reportEndDate,
		update_date
		updateDate, create_date createDate
		FROM report WHERE
		report_no = #{reportNo}
	</select>
	<!-- 출제한 과제 수정하기 form -->

	<!-- 출제한 과제 수정하기 -->
	<update id="updateReport" parameterType="com.gd.lms.vo.Report">
		UPDATE report SET
		report_title = #{reportTitle}, report_content = #{reportContent},
		report_start_date = #{reportStartDate}, report_end_date =
		#{reportEndDate}, update_date = now()
		WHERE report_no = #{reportNo}
	</update>
	<!-- 출제한 과제 수정하기 -->

	<!-- 행정용 출제한 과제 삭제하기 -->
	<delete id="deleteReport" parameterType="int">
		DELETE FROM report WHERE
		report_no = #{reportNo}
	</delete>
	<!-- 행정용 출제한 과제 삭제하기 -->

</mapper>